
@{
    ViewData["Title"] = "Index";
    Layout = "_Layout";
}

<div class="row">
    <div class="col">
        <div class="card" style="margin: 20px;">
            <div class="card-body">
                <h5 class="card-title">Capitulo 1: Controlando el flujo de un programa</h5>
                <h6 class="card-subtitle mb-2 text-muted">Tema 5: Implementar el manejo de exepciones</h6>
                <hr>
                <p class="card-text">
                    <h5>Crear excepciones personalizadas</h5>
                    <ul>
                        <li>
                            Al diseñar una aplicación, también debe decidir (y diseñar) cómo responderá la aplicación a cualquier condición de error. Esto puede incluir la creación de
                            tipos de excepción personalizados para su programa. El nombre de la clase de excepción debe terminar con "Excepción". La clase CalcException en el Listado
                            1-81 contiene un valor de código de error que se establece cuando se construye la excepción. Este código de error se puede usar en el controlador de
                            excepciones.
                        </li>
                    </ul>
                    <h6>Cláusulas condicionales en bloques catch</h6>
                    <ul>
                        <li>
                            Un controlador de excepciones puede volver a lanzar una excepción si no está en condiciones de lidiar con la excepción. Viste esto en la sección "Lanzar
                            excepciones" anteriormente en este capítulo. Una alternativa para volver a lanzar una excepción es crear un controlador que solo capture excepciones que
                            contengan valores de datos particulares.
                        </li>
                        <li>
                            El código en el Listado 1-82 muestra cómo se logra esto. La palabra clave when es seguida por una cláusula condicional que realiza una prueba en el objeto de
                            excepción. El controlador de excepciones solo se activará en caso de que se produzca una excepción que tenga una propiedad Error establecida en DivideByZero.
                            Se ignora una excepción con cualquier otro código de error y, en el caso del programa de ejemplo, hará que el programa finalice inmediatamente ya que se ha
                            lanzado una excepción no controlada.
                        </li>
                        <li>
                            Si se ejecuta el programa en el Listado 1-82, mostrará el mensaje: "Divide por cero error". Si el valor de error en la instrucción throw se cambia de
                            DivideByZero a InvalidNumberText, el programa fallará con una excepción no controlada.
                        </li>
                        <li>
                            Este mecanismo es más eficiente que volver a lanzar una excepción, porque el tiempo de ejecución de .NET no tiene que reconstruir el objeto de excepción
                            antes de volver a lanzarlo.
                        </li>
                    </ul>
                </p>
            </div>
        </div>
    </div>
</div>